[user]
	name = monty
	email = velimir.vesselinov@gmail.com

[github]
	user = velimir.vesselinov@gmail.com

[core]
	editor = /usr/bin/vim
	pager = less -r

[color]
	branch = auto
	diff = auto
	status = auto

[color "branch"]
	current = red reverse
	local = blue
	remote = green

[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold

[color "status"]
	added = yellow
	changed = green
	untracked = cyan

[alias]
	st = status -s
	cl = clone
	ci = commit
	cm = commit -m
	cma = commit -a -m
	ca = commit --amend
	amend = commit --amend
	caa = commit -a --amend -C HEAD
	filelog = log -u
	fl = log -u
	
	ai = add --interactive
	
	co = checkout
	br = branch
	#"!git branch -ra | grep -v done"
	bra = branch -ra
	#list commands
	le = log --oneline --decorate
	ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
	ls1 = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
	lds = log --pretty=format:"%C(yellow)%h\\ %C(green)%ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short --graph
	ls = log --pretty=format:"%C(green)%h\\ %C(yellow)[%ad]%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
	lg1 = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
	lg2 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
	lg = !"git lg1"
	lc = "!f() { git ll "$1"^.."$1"; }; f"
	lnc = log --pretty=format:"%h\\ %s\\ [%cn]"
	#list all aliases
	la = "!git config -l | grep alias | cut -c 7-"
	diff = diff --word-diff
	d = diff --word-diff
	dc = diff --cached
	#list modified files in last commit
	dl = "!git ll -1"
	#diff last commit
	dlc = diff --cached HEAD^
	dr = "!f() { git diff -w "$1"^.."$1"; }; f"
	diffr = "!f() { git diff "$1"^.."$1"; }; f"
	branch = branch -ra
	
	#reset commands
	r = reset
	r1 = reset HEAD^
	r2 = reset HEAD^^
	rh = reset --hard
	rh1 = reset HEAD^ --hard
	rh2 = reset HEAD^^ --hard
	
	#stash
	sl = stash list
	sa = stash apply
	ss = stash save
	
	cp = cherry-pick
	grep = grep -Ii
	gr = grep -Ii
	#grep from root folder
	gra = "!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git grep --full-name -In $1 | xargs -I{} echo $TOPLEVEL/{} && cd $A; }; f"
	
	#grep on filename
	f = "!git ls-files | grep -i"
	
	#rename branch tree to done-
	done = "!f() { git branch | grep "$1" | cut -c 3- | grep -v done | xargs -I{} git branch -m {} done-{}; }; f"
	
	#assume aliases
	assume = update-index --assume-unchanged
	unassume = update-index --no-assume-unchanged
	#show assumed files
	assumed = "!git ls-files -v | grep ^h | cut -c 3-"
	#unassume all the assumed files
	unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"
	assumeall = "!git st -s | awk {'print $2'} | xargs git assume"
	
	lasttag = describe --tags --abbrev=0
	lt = describe --tags --abbrev=0
	
	#merges
	ours = "!f() { git co --ours $@ && git add $@; }; f"
	theirs = "!f() { git co --theirs $@ && git add $@; }; f"
	
	#list remotes
	rem = "!git config -l | grep remote.*url | tail -n +2"
	
	#apply patch from other local repo
	lap = "!f() { git --git-dir=$1 format-patch -k -1 --stdout $2 | git am -3 -k; }; f"
	
	#subtree add
	sba = "!f() { git subtree add --prefix $2 $1 master --squash; }; f" 
	unstage = reset HEAD --
	last = log -1 HEAD
	visual = !gitk
	pushall = "!f(){ for i in `git remote`; do git push $i master; done; };f"
	pullall = "!f(){ for i in `git remote`; do git pull $i master; done; };f"
	rm-symlink = "!__git_rm_symlink(){\n    git checkout -- \"$1\"\n    link=$(echo \"$1\")\n    POS=$'/'\n    DOS=$'\\\\\\\\'\n    doslink=${link//$POS/$DOS}\n    dest=$(dirname \"$link\")/$(cat \"$link\")\n    dosdest=${dest//$POS/$DOS}\n    if [ -f \"$dest\" ]; then\n        rm -f \"$link\"\n        cmd //C mklink //H \"$doslink\" \"$dosdest\"\n    elif [ -d \"$dest\" ]; then\n        rm -f \"$link\"\n        cmd //C mklink //J \"$doslink\" \"$dosdest\"\n    else\n        echo \"ERROR: Something went wrong when processing $1 . . .\"\n        echo \"       $dest may not actually exist as a valid target.\"\n    fi\n}; __git_rm_symlink \"$1\""
	rm-symlinks = "!__git_rm_symlinks(){\n    for symlink in $(git ls-files -s | egrep \"^120000\" | cut -f2); do\n        git rm-symlink \"$symlink\"\n        git update-index --assume-unchanged \"$symlink\"\n    done\n}; __git_rm_symlinks"
[push]
	default = simple
[gui]
	recentrepo = /Users/monty/tex/wtpaper2014
[url "git@github.com:"]
	insteadOf = git://github.com/
[url "http://"]
	insteadOf = git://
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
